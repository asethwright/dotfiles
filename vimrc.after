" Basic Formatting
set smartindent
set tabstop=4
set shiftwidth=4
set expandtab
set nobackup
set noswapfile
set textwidth=0
set wrapmargin=0
filetype plugin indent on
syntax on

" Mouse
set mouse=a
map <ScrollWheelUp> <C-Y>
map <ScrollWheelDown> <C-E>

" No markdown folding
let g:vim_markdown_folding_disabled=1

" Airline Config
set laststatus=2
set t_Co=256
let g:airline#extensions#ctrlp#color_template = 'replace'
let g:airline#extensions#hunks#non_zero_only = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 0
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#fnamemod = ':t'
:nnoremap <leader>at :AirlineToggle<cr>

" Copy to my osx clipboard
set clipboard=unnamed

" Nerd tree
let g:NERDTreeWinPos = "right"
let NERDTreeQuitOnOpen = 1

" Allow more/less time for leader
set timeoutlen=500
set ttimeoutlen=50

" Tab Navigation
:nnoremap <C-S-t> :tabnew<CR>
:nnoremap <C-S-l> gt
:nnoremap <leader>l gt
:nnoremap <C-S-h> gT
:nnoremap <leader>h gT

" Yank to end of selection
:vmap Y y`]o<esc>p

" Vimrc Refresh
:nnoremap <leader>vr :source ~/.vimrc.after<CR>
:nnoremap <leader>ve :tabedit ~/.vimrc.after<CR>

" File saving
:noremap <Leader>s :update<CR>
:noremap <Leader>w :update<CR>
:noremap <Leader>wq :wq!<CR>
:noremap <Leader>q :q<CR>

" Change cursor to smaller on insert mode
if exists('$TMUX')
    let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
    let &t_SI = "\<Esc>]50;CursorShape=1\x7"
    let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

" Function and file search
:nnoremap <C-U> :CtrlPFunky<Cr>
:nnoremap <C-O> :CtrlPFunky<Cr>
:nnoremap <leader>fu :CtrlPFunky<Cr>
:nnoremap <leader>fp :CtrlP<Cr>
:nnoremap <leader>tg :GitGutterToggle<Cr>
let g:ctrlp_max_files=30000
:GitGutterDisable

" Environment Switching
:nnoremap <leader>efd :call SetSethEnv('freelance', 'dark')<Cr>
:nnoremap <leader>efl :call SetSethEnv('freelance', 'light')<Cr>
:nnoremap <leader>ewd :call SetSethEnv('work', 'dark')<Cr>
:nnoremap <leader>ewl :call SetSethEnv('work', 'light')<Cr>
:nnoremap <leader>fws :FixWhitespace<CR>
:nnoremap <leader>fi  ggVG>gv<<esc>

" Select all
:nnoremap <leader><leader>a ggVG

" Tasks
:nnoremap <leader>ta Go[ ]
:nnoremap <leader>tc mz0lrx`z
:nnoremap <leader>tm mz0lr-`z
:nnoremap <leader>tu mz0lr `z

function! SetSethEnv(env, bg)
    if a:env == 'work'
        let g:airline_theme='seth'
        colorscheme base16-tomorrow
    else
        let g:airline_theme='solarized'
        colorscheme solarized
    endif

    if(a:bg == 'dark')
        set background=dark
        highlight LineNr ctermfg=yellow ctermbg=NONE guibg=NONE
    else
        set background=light
        highlight LineNr ctermfg=blue ctermbg=NONE guibg=NONE
    endif

endfunction

:call SetSethEnv('work', 'light')
autocmd BufNewFile,BufRead *.blade.php set ft=html | set ft=phtml | set ft=blade " Fix blade auto-indent
